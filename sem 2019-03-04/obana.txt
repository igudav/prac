Сегодня будет стандартная библиотека
STL
Контейнеры:
    vector - динамически расширяемый массив
    list
    forward_list
    deque - двойная очередь
    array - массив размера этапа компиляции
    string (строка внутренне сложнее вектора, поэтому отдельно)

    ---------

    set - дерево (К-Ч)
    map - ассоц контейнер (ключ-значение)

    возможны приставки [multi-] - мб эл-ты с одинакомым значением

    unordered_set
             _map - хэш-таблицы

Чтобы положить какой-то тип, надо иметь перегруженные операторы:
    < для деревьев
    hash, == для хэш-таблиц
    копирование, [move] для vector

vector
    добавление в конец в лучшем О(1), в худшем (расширение с копированием) О(n)
    добавление в середину O(n)


list
    добавление O(n)

array
    добавить невозможно, так как фикс размер

Концепция итераторов
    1) Все диапазоны полуоткрытые [  )
    2) Методы begin и end возвращают указатель на начало и конец контейнера
    3) итератор it = v.begin(); it++;

    Классы итераторов:
        1. RandomAccessIter
            Iter
            ++
            --
            *
            <
            +=
            +
        2. Для списка BiDirectionIter (ForwardIter, если без --)
            ++
            --
            *
            += нет, так как выглядит как О(1), а под капотом O(n)
        3. ReverseIter
            rbegin, rend
        4. InputIter, OutputIter
            cout << *it;
            *it = 5;